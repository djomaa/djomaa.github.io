{"version":3,"sources":["redux/reducers/wallet/slice.ts","utils/object.utils.ts","types/chain.types.ts","types/separate.ts","utils/validators/address.validator.ts","utils/validators/hex.validator.ts","utils/validators/index.ts","utils/index.ts","redux/reducers/chain/slice.ts","redux/reducers/wallet/async-actions.ts","redux/store.ts","redux/hooks.ts","logger.ts","redux/reducers/wallet/connectors/index.ts","redux/reducers/wallet/connectors/metamask.connector.ts","redux/reducers/wallet/connectors/abstract.connector.ts","redux/reducers/wallet/utils.ts","redux/reducers/wallet/index.ts","redux/reducers/wallet/select.ts","redux/reducers/chain/select.ts","redux/reducers/chain/async-actions.ts","redux/reducers/utils.ts","redux/reducers/chain/utils.ts","redux/reducers/chain/index.ts","components/connect/index.tsx","components/nav/account.tsx","components/nav/network.tsx","components/nav/status.tsx","components/nav/index.tsx","constants/index.ts","components/add-contract/abi/IERC20.abi.ts","components/add-contract/abi/index.ts","components/add-contract/abi/IERC721.abi.ts","components/add-contract/standard-selector.tsx","components/add-contract/index.tsx","components/use-contract/inputs/item/abstract.input.tsx","components/use-contract/inputs/item/address.input.tsx","components/use-contract/inputs/item/hex.input.tsx","components/use-contract/inputs/index.tsx","components/use-contract/fn-inputs.tsx","components/use-contract/use-function.tsx","components/use-contract/use-contract-component.tsx","components/use-contract/abi-function.tsx","components/use-contract/contract-component.tsx","pages/app/index.tsx","index.tsx"],"names":["NAME","slice","createSlice","name","initialState","connector","undefined","loading","connected","chainId","address","addresses","reducers","set","state","action","key","payload","create","original","value","keys","console","log","lastKey","pop","obj","reduce","r","n","get","v","ACTION_STATE","SOL_TYPE","validateAddress","isAddress","validateHex","isHex","SOLIDITY_VALIDATOR","HEX","ADDRESS","uuseValidator","type","validatorToChecker","validator","checkIs","hex","abi","SafeJSON","JSON","parse","error","message","stringify","walletConnector","history","add","aa","id","update","store","configureStore","reducer","wallet","chain","useAppDispatch","useDispatch","useAppSelector","useSelector","AppLogger","module","this","msg","prefix","connectors","AbiCoder","logger","_eth","window","ethereum","isInstalled","Error","a","eth","request","method","accounts","result","Number","events","on","dispatch","actions","params","constructor","_connect","newState","storage","localStorage","KEY","connect","createAsyncThunk","instance","setItem","autoConnect","_","selected","getItem","find","c","removeItem","async","uuseConnectors","select","all","utils","factory","contractId","fnId","actionId","ids","call","aaa","getState","PENDING","data","path","to","uAct","SUCCEED","nanoid","uuseAbiCoder","Web3EthAbi","ConnectComponent","Container","Grid","textAlign","style","height","divided","Row","verticalAlign","Column","Header","map","Button","onClick","SOURCE","DEFAULT_ACCOUNTS","source","DEFAULT","AccountSelector","options","useMemo","addr","WALLET","item","text","label","color","empty","circular","Dropdown","search","selection","allowAdditions","Group","icon","Icon","LOCAL_NETWORK","rpc","NetworkSelector","useState","active","setActive","setLoading","list","setList","useAsyncEffect","fetch","json","useEffect","network","toString","fluid","StatusComponent","Nav","Menu","Item","position","ROUTE","STANDARD","ABI","ERC20","ERC721","Object","values","StandardSelector","emitChange","onChange","setActiveItem","button","className","floating","length","toLowerCase","validateAbi","Array","isArray","AddContractComponent","addressValue","setAddress","abiValue","setAbi","addressError","setAddressError","abiError","setAbiError","useHistory","Form","onSubmit","URLSearchParams","push","USE_CONTRACT","Input","onAddressChange","content","Field","str","Or","TextArea","onAbiChange","AbstractInput","props","validate","setState","setValue","validateWrap","Content","Meta","Description","placeholder","Extra","Label","basic","pointing","React","Component","AddressInput","HexInput","INPUT","FnInputs","setValues","inputs","input","index","Elem","uuseSolidityInput","ERROR","UseFunction","isOpen","setOpen","setError","abiCoder","Modal","onOpen","onClose","open","trigger","dimmer","closeOnEscape","closeOnDimmerClick","Message","negative","Actions","inverted","valuesMap","parameters","encodeFunctionCall","from","setActionId","AbiFunction","signature","encodeFunctionSignature","actionSelector","join","description","stateMutability","returns","outputs","Card","extra","ContractComponent","filter","ParseError","UseContractComponent","location","has","ADDRESS_NOT_FOUND","INVALID_ADDRESS","ABI_NOT_FOUND","abiRaw","abiParseResult","NOT_A_JSON","INVALID_ABI","parseLocation","err","Segment","createBrowserHistory","OnlyConnected","children","Loader","App","ADD_CONTRACT","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb569288.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { IState } from './types';\n\n\n\nexport const NAME = 'wallet';\n\nexport const slice = createSlice({\n  name: NAME,\n  initialState: {\n    connector: undefined,\n    loading: true,\n    connected: undefined,\n    chainId: undefined,\n    address: undefined,\n    addresses: undefined,\n  } as IState,\n  reducers: {\n    set: (state, action: PayloadAction<Partial<IState>>) => {\n      for (const key in action.payload) {\n        // @ts-ignore\n        state[key] = action.payload[key];\n      }\n    },\n  },\n});\n\n\n\n\n\n\n","export function create<TObj extends object>(original: any, value: any, ...keys: string[]) {\n  console.log('keys', keys);\n  const lastKey = keys.pop()!;\n  const obj = keys.reduce((r, key) => {\n    console.log(key, 'current:', r);\n    if (typeof r[key] === 'object') {\n      console.log('is object', r[key]);\n      return r[key];\n    } else {\n      console.log('not object')\n      const n = {};\n      r[key] = n;\n      return n;\n    }\n  }, original);\n  obj[lastKey] = value;\n}\n\nexport function get(obj: any, ...keys: string[]) {\n  return keys.reduce((v, key) => {\n    if (typeof v !== 'object') {\n      return undefined;\n    }\n    return v[key];\n  }, obj)\n}\n","export type ActionId = string;\nexport type ChainId = any;\nexport type ContractId = any;\nexport type FunctionId = any;\n\nexport type IHistory = any;\n\nexport enum ACTION_STATE {\n  PENDING = 'pending',\n  PROCESSING = 'processing',\n  SUCCEED = 'succeed',\n  FAILED = 'failed',\n}\nexport type IActionPath = [chainId: ChainId, contractId: ContractId, functionId: FunctionId]\nexport interface IAction {\n  id: ActionId;\n  state: ACTION_STATE;\n  result?: string;\n}\n","import { AbiItem, AbiInput, AbiOutput } from 'web3-utils';\n\nexport type Hex = string;\nexport type Address = string;\ninterface IEth {\n  request(opts: { method: 'eth_accounts' }): Promise<string[]>;\n  request(opts: { method: 'eth_requestAccounts' }): Promise<void>; // TODO: check return type\n  request(opts: { method: 'eth_chainId' }): Promise<string>;\n  request(opts: { method: 'wallet_getPermissions', params: [{ eth_accounts: {} }] }): Promise<[]>;\n  request(opts: { method: 'wallet_requestPermissions', params: [{ eth_accounts: {} }] }): Promise<void>;\n\n  on(event: 'accountsChanged', handler: (accounts: string[]) => void): void;\n  on(event: 'chainChanged', handler: (chainId: string) => void): void;\n  on(event: 'disconnect', handler: (chainId: string) => void): void;\n}\n\ndeclare global {\n  interface Window {\n      ethereum: unknown;\n  }\n}\n\nexport type Constructable<TObj, TArgs extends any[] = []> = {\n  new(...args: TArgs): TObj;\n}\n\nexport type IAbiItem = AbiItem;\nexport type IAbi = IAbiItem[];\n\nexport type { AbiInput as IAbiInput, AbiOutput as IAbiOutput };\n\nexport interface IAbiCoder {\n  encodeFunctionCall(abi: IAbiItem, parameters: any[]): string;\n  encodeFunctionSignature(abi: IAbiItem): string;\n}\n\nexport interface ICall {\n  from: string;\n  to: string;\n  data: string;\n}\n\nexport type ISolidityTypeValidator = (value: string) => string | undefined;\n\nexport enum SOL_TYPE {\n  HEX = 'hex',\n  ADDRESS = 'address',\n}\n\nexport type Undefineable<T> = {\n  [K in keyof T]: undefined;\n}\n\n","import { isAddress } from 'web3-utils';\n\nexport function validateAddress(value: string) {\n  if (!isAddress(value)) {\n    return 'Not address'\n  }\n}\n","import { isHex } from 'web3-utils';\n\nexport function validateHex(value: string) {\n  if (!isHex(value)) {\n    return 'Not hex'\n  }\n}\n","import { IAbi, ISolidityTypeValidator, SOL_TYPE } from '../../types';\nimport { validateAddress } from './address.validator';\nimport { validateHex } from './hex.validator';\n\nexport const SOLIDITY_VALIDATOR: Record<SOL_TYPE, ISolidityTypeValidator> = {\n  [SOL_TYPE.HEX]: validateHex,\n  [SOL_TYPE.ADDRESS]: validateAddress,\n};\n\nexport function uuseValidator(type: string): ISolidityTypeValidator {\n  return SOLIDITY_VALIDATOR[type as SOL_TYPE] ?? SOLIDITY_VALIDATOR[SOL_TYPE.HEX];\n}\n\nexport type Checker<T> = (value: unknown) => value is T;\n\nfunction validatorToChecker<T>(validator: ISolidityTypeValidator): Checker<T> {\n  return function checker(value: unknown): value is T {\n    if (typeof value !== 'string') {\n      return false;\n    }\n    const result = validator(value);\n    return result === undefined;\n  }\n}\n\nfunction isAbi(value: unknown): value is IAbi {\n  return true;\n}\n\nexport const checkIs = {\n  hex: validatorToChecker<string>(validateHex),\n  address: validatorToChecker<string>(validateAddress),\n  abi: isAbi,\n}\n","import { nanoid } from '@reduxjs/toolkit';\nimport { ActionId, IAbi } from '../types';\nexport class SafeJSON {\n  static parse<T = unknown>(value: string): { value: T, error: undefined } | { value: undefined, error: string } {\n    try {\n      const parsed = JSON.parse(value);\n      return {\n        value: parsed,\n        error: undefined,\n        // status: true\n      };\n    } catch (error) {\n      return {\n        error: error.message,\n        value: undefined,\n      }\n    }\n  }\n\n  static stringify(value: unknown) {\n    return JSON.stringify(value);\n  }\n}\n\nexport * from './object.utils';\nexport * from './validators';\n\nexport function randomId(): ActionId {\n  return nanoid();\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { IAction, IActionPath } from '../../../types';\nimport { create, get } from '../../../utils';\nimport { IState } from './types';\n\nexport const NAME = 'chain';\n\nexport const slice = createSlice({\n  name: NAME,\n  initialState: {\n    history: {},\n  } as IState,\n  reducers: {\n    add: (state, action: PayloadAction<[IActionPath, IAction]>) => {\n      const aa = action.payload[1];\n      create(state.history, aa, ...action.payload[0], aa.id);\n    },\n    update: (state, action: PayloadAction<[IActionPath, IAction]>) => {\n      const keys = action.payload[0];\n      const aa = action.payload[1];\n      const act = get(state.history, ...keys);\n      act[aa.id] = aa;\n    }\n  },\n});\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { AppLogger } from '../../../logger';\nimport { connectors } from './connectors';\nimport { Connector, ConnectorConstructor } from './connectors/abstract.connector';\nimport { NAME, slice } from './slice';\n\nconst logger = new AppLogger('wallet.slice.async-actions');\n\n\nexport let walletConnector: Connector;\nconst storage = localStorage;\n\nconst KEY = 'CONNECTOR';\n\nexport const connect = createAsyncThunk(\n  `${NAME}/connect`,\n  async (connector: ConnectorConstructor, { dispatch }) => {\n    logger.log('connect', { name: connector.name });\n    const instance = new connector(dispatch);\n    await instance.connect();\n    logger.log('connected');\n    storage.setItem(KEY, connector.name);\n    walletConnector = instance;\n    dispatch(slice.actions.set({ loading: false }));\n  }\n)\n\nexport const autoConnect = createAsyncThunk(\n  `${NAME}/autoconnect`,\n  async (_, { dispatch }) => {\n    dispatch(slice.actions.set({ loading: true }));\n    const selected = storage.getItem(KEY);\n    const connector = connectors.find((c) => c.name === selected);\n    if (!connector) {\n      dispatch(slice.actions.set({ loading: false }));\n      storage.removeItem(KEY);\n      return;\n    }\n    dispatch(connect(connector));\n  }\n)\n\nexport const async = {\n  connect,\n  autoConnect,\n}\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport { slice as wallet } from './reducers/wallet/slice';\nimport { slice as chain } from './reducers/chain/slice';\n\nexport const store = configureStore({\n  reducer: {\n    wallet: wallet.reducer,\n    chain: chain.reducer,\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\nexport interface AsyncThunkConfig {\n    state: RootState;\n    dispatch: AppDispatch;\n}\n","type Message = [string] | [{ message: string }] | [string, object];\n\nexport class AppLogger {\n\n  get prefix() {\n    return `[${this.module}]`;\n  }\n\n  constructor(readonly module: string) {\n  }\n\n  log(...msg: Message) {\n    console.log(this.prefix, ...msg);\n  }\n\n}\n","import { ConnectorConstructor } from './abstract.connector';\nimport { MetaMask } from './metamask.connector';\n\nexport const connectors: ConnectorConstructor[] = [MetaMask];\n","import AbiCoder from 'web3-eth-abi';\nimport { AppLogger } from '../../../../logger';\nimport { ICall } from '../../../../types';\nimport { slice } from '../slice';\nimport { Connector } from './abstract.connector';\n\ninterface IEth {\n  request<T>(opts: { method: 'eth_call', params: [{ from: string, to: string, data: string }] }): Promise<string>;\n  request(opts: { method: 'eth_accounts' }): Promise<string[]>;\n  request(opts: { method: 'eth_requestAccounts' }): Promise<string[]>; // TODO: check return type\n  request(opts: { method: 'eth_chainId' }): Promise<string>;\n  request(opts: { method: 'wallet_getPermissions', params: [{ eth_accounts: {} }] }): Promise<[]>;\n  request(opts: { method: 'wallet_requestPermissions', params: [{ eth_accounts: {} }] }): Promise<void>;\n\n  on(event: 'accountsChanged', handler: (accounts: string[]) => void): void;\n  on(event: 'chainChanged', handler: (chainId: string) => void): void;\n  on(event: 'disconnect', handler: (chainId: string) => void): void;\n}\n\nexport class MetaMask extends Connector {\n  \n  abi = AbiCoder;\n\n  logger = new AppLogger('metamask.connector')\n\n  isInstalled() {\n    return window.ethereum && typeof window.ethereum === 'object';\n  }\n\n\n  private _eth: IEth | undefined;\n  get eth() {\n    if (!this._eth) {\n      if (!this.isInstalled()) {\n        throw new Error('MetaMask not installed');\n      }\n      this._eth = window.ethereum as IEth;\n      return this._eth;\n    }\n    return this._eth;\n  }\n\n  async _connect()  {\n    const accounts = await this.eth.request({ method: 'eth_requestAccounts' });\n    const chainId = await this.eth.request({  method: 'eth_chainId' });\n    const result = {\n      address: accounts[0],\n      addresses: accounts,\n      chainId: Number(chainId),\n      connected: true,\n    };\n    console.log('mm done', result);\n    \n    this.events();\n\n    return result;\n  }\n\n  events() {\n    this.eth.on('accountsChanged', (accounts) => {\n      this.logger.log('accountsChanged', accounts);\n      this.dispatch(slice.actions.set({\n        address: accounts[0],\n        addresses: accounts,\n      }));\n    });\n  }\n\n  call(params: ICall) {\n    return this.eth.request({\n      method: 'eth_call',\n      params: [params],\n    })\n  }\n\n}\n","import { Constructable, ICall } from '../../../../types';\nimport { AppDispatch } from '../../../store';\nimport { slice } from '../slice';\nimport { IBaseState } from '../types';\n\n\nexport abstract class Connector {\n  \n  name = this.constructor.name;\n\n  constructor(protected dispatch: AppDispatch) {\n  }\n\n  abstract _connect(): Promise<IBaseState>;\n\n  async connect(): Promise<void> {\n    const newState = await this._connect();\n    this.dispatch(slice.actions.set({\n      connector: this.name,\n      ...newState,\n    }));\n  }\n\n  abstract call(props: ICall): Promise<string>;\n\n}\n\nexport type ConnectorConstructor = Constructable<Connector, [AppDispatch]>;\n","import { connectors } from './connectors';\n\nexport function uuseConnectors() {\n  return connectors;\n}\n","import { select } from './select';\nimport { slice } from './slice';\nimport { async } from './async-actions';\nimport * as utils from './utils';\n\nexport const wallet = {\n  select,\n  actions: slice.actions,\n  async,\n  utils,\n}\n","import { RootState } from '../../store';\n\nexport const select = {\n  all: (state: RootState) => state.wallet,\n}\n","import { ActionId, ChainId, ContractId, FunctionId, IAction, IActionPath } from '../../../types';\nimport { get } from '../../../utils';\nimport { RootState } from '../../store';\n\nexport const select = {\n  all: (state: RootState) => state.chain,\n  chainId: (state: RootState) => state.wallet.chainId,\n  factory: {\n    action: (\n      // ...ids: [...IActionPath, ActionId]\n      // ...ids: [chainId: ChainId, contractId: ContractId, fnId: FunctionId, actionId: ActionId]\n      chainId: ChainId,\n      contractId: ContractId,\n      fnId: FunctionId,\n      actionId: ActionId,\n    ) => {\n      const ids = [chainId, contractId, fnId, actionId];\n      return (state: RootState): IAction | undefined => get(state.chain.history, ...ids);\n    }\n  }\n} \n","import { createAsyncThunk } from '@reduxjs/toolkit';\n\nimport { walletConnector } from '../wallet/async-actions';\n\nimport { ACTION_STATE, IActionPath, ICall } from '../../../types';\nimport { AsyncThunkConfig } from '../../hooks';\nimport { executeWithId, WithId } from '../utils';\nimport { select } from './select';\nimport { NAME, slice } from './slice';\n\nexport const call = createAsyncThunk<void, WithId<ICall>, AsyncThunkConfig>(\n  `${NAME}/autoconnect`,\n  async ([id, aaa], { dispatch, getState }) => {\n    const state = getState();\n    const chainId = select.chainId(state)!;\n    const action = {\n      id,\n      state: ACTION_STATE.PENDING,\n    }\n    const fnId = aaa.data.slice(0, 10);\n    const path: IActionPath = [chainId, aaa.to, fnId];\n    dispatch(slice.actions.add([\n      path,                                  \n      action,\n    ]))\n    try {\n      const result = await walletConnector.call(aaa);\n      const uAct = {\n        ...action,\n        state: ACTION_STATE.SUCCEED,\n        result,\n      }\n      dispatch(slice.actions.update([\n        path,\n        uAct,\n      ]))\n    } catch (e) {\n      console.error(e);\n    }\n  }\n)\n\nexport const async = {\n  call: executeWithId(call),\n}\n","import { AsyncThunk, nanoid } from '@reduxjs/toolkit';\nimport { ActionId } from '../../types';\nimport { randomId } from '../../utils';\nimport { AsyncThunkConfig } from '../hooks';\nimport { AppDispatch } from '../store';\n\nexport type WithId<T> = [id: ActionId, payload: T];\nexport function executeWithId<\n  T extends AsyncThunk<any, [id: ActionId, payload: any], AsyncThunkConfig>\n>(\n  action: T\n) {\n  return (dispatch: AppDispatch, payload: Parameters<T>[0][1]) => {\n    const id = randomId();\n    dispatch(action([id, payload]));\n    return id;\n  }\n}\n","// wtf is with types of this lib?\nimport Web3EthAbi from 'web3-eth-abi';\n\nimport { IAbiCoder } from '../../../types';\n\nexport function uuseAbiCoder(chainId?: number): IAbiCoder {\n  //  if (_chainId === undefined) {\n  //    return undefined;\n  //  }\n  // @ts-ignore\n  return Web3EthAbi;\n}\n\n","import { select } from './select';\nimport { slice } from './slice';\nimport { async } from './async-actions';\nimport * as utils from './utils';\n\nexport const chain = {\n  select,\n  actions: slice.actions,\n  async,\n  utils,\n}\n","import { useDispatch } from 'react-redux';\nimport { Container, Button, Grid, Header } from 'semantic-ui-react';\nimport { useAppDispatch } from '../../redux/hooks';\nimport { wallet } from '../../redux';\nimport { MetaMask } from '../../redux/reducers/wallet/connectors/metamask.connector';\n\n\nexport function ConnectComponent() {\n\n  const dispatch = useAppDispatch();\n\n  return (\n    <Container>\n      <Grid textAlign='center' style={{ height: '100vh' }} divided='vertically'>\n        <Grid.Row verticalAlign='bottom'>\n          <Grid.Column>\n            <Header>\n              To send transactions you need to connect a wallet application.\n            </Header>\n            {wallet.utils.uuseConnectors().map((connector) => (\n              <Button key={connector.name} onClick={() => dispatch(wallet.async.connect(connector))}>{connector.name}</Button>\n            ))}\n              {/* <Button onClick={() => connect(MetaMask)}>MetaMask</Button> */}\n              {/* <Button disabled>WalletConnect</Button> */}\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row verticalAlign='top'>\n          <Grid.Column>\n            <Header>\n              Or you can continue with call only access\n            </Header>\n              <Button>Call Only</Button>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </Container>\n  );\n}\n\n","\nimport { useContext, useMemo, useState } from 'react';\nimport { Icon, Dropdown, Container, Button, ButtonGroup } from 'semantic-ui-react';\nimport { wallet } from '../../redux';\nimport { useAppSelector } from '../../redux/hooks';\n\nexport interface IAccount {\n  name?: string;\n  address: string;\n}\n\nenum SOURCE {\n  DEFAULT = 'default',\n  WALLET = 'wallet',\n  AAAA = 'aaaa',\n}\n\nconst DEFAULT_ACCOUNTS = [\n  {\n    name: 'Zero Address',\n    address: '0x0000000000000000000000000000000000000000',\n    source: SOURCE.DEFAULT,\n  }\n];\n\nexport function AccountSelector() {\n\n  const all = useAppSelector(wallet.select.all)\n  // const address = useAppSelector(wallet.select.address);\n  // const addresses = useAppSelector(wallet.select.addresses);\n\n  const accounts = useMemo(() => {\n    if (!all.connector) return [];\n    const aa = all.addresses.map((addr) => ({\n      name: undefined,\n      address: addr,\n      source: SOURCE.WALLET,\n    }))\n    return [...DEFAULT_ACCOUNTS, ...aa];\n  }, [all.addresses]);\n\n  const options = accounts.map((item) => {\n      const text = item.name\n        ? `${item.name} ${item.address.slice(0, 4)}..${item.address.slice(40, 42)}`\n        : `${item.address.slice(0, 6)}..${item.address.slice(38, 42)}`;\n      const label = {\n        color: item.source === SOURCE.WALLET ? 'blue' : 'yellow',\n        empty: true,\n        circular: true,\n      }\n      return {\n        key: item.address,\n        text: text,\n        value: item.address,\n        label,\n      };\n    });\n\n  // const addAccount\n\n  return (\n    <>\n      <Dropdown value={all.address} search selection options={options} allowAdditions />\n      <Button.Group>\n        <Button icon>\n          <Icon name='add user' />\n        </Button>\n      </Button.Group>\n    </>\n  );\n}\n\n","import { useContext, useEffect, useMemo, useState } from 'react';\nimport { Menu, Dropdown } from 'semantic-ui-react';\nimport { useAsyncEffect } from 'use-async-effect';\nimport { chain, wallet } from '../../redux';\nimport { useAppSelector } from '../../redux/hooks';\n\ninterface INetwork {\n  name: string;\n  chainId: number | undefined;\n  rpc: string[];\n}\n\nconst LOCAL_NETWORK: INetwork = {\n    name: 'Localhost',\n    chainId: undefined,\n    rpc: [\n      'http://localhost:8545',\n      'ws://localhost:8545',\n    ]\n  };\n\nfunction sleep(ms: number) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nexport function NetworkSelector() {\n  \n\n  const chainId = useAppSelector(chain.select.chainId);\n  console.log('cha', chainId);\n  const [active, setActive] = useState(LOCAL_NETWORK.chainId);\n  const [loading, setLoading] = useState(false);\n  const [list, setList] = useState([LOCAL_NETWORK]);\n\n  useAsyncEffect(async () => {\n    setLoading(true);\n    const data = await fetch('https://chainid.network/chains.json');\n    const result: INetwork[] = await data.json();\n    // await sleep(5e3);\n    setList([LOCAL_NETWORK, ...result]);\n    setLoading(false);\n  }, []);\n\n  useEffect(() => {\n    const item = list.find((network) => network.chainId === chainId);\n    if (!item) {\n      if (chainId !== undefined) {\n        const network = {\n          name: `0x${chainId.toString(16)} (${chainId}) - Unknown network`,\n          chainId: chainId,\n          rpc: [],\n        }\n        setList([network, ...list]);\n      }\n    }\n    if (active !== chainId) {\n      setActive(chainId);\n    }\n  }, [chainId, list]);\n\n\n  const options = useMemo(() => {\n    return list.map((item) => ({\n      key: item.name + '_' + item.chainId,\n      text: item.name,\n      value: item.chainId,\n    }));\n  }, [list]);\n\n  return (\n    <Dropdown\n      loading={loading}\n      fluid\n      search\n      selection\n      value={active}\n      options={options}\n    />\n  );\n}\n\n","import { useContext, useMemo, useState } from 'react';\nimport { Icon, Dropdown, Container, Button, ButtonGroup } from 'semantic-ui-react';\n\nexport interface IAccount {\n  name?: string;\n  address: string;\n}\n\nconst DEFAULT_ACCOUNTS = [\n  {\n    name: 'Zero Address',\n    address: '0x0000000000000000000000000000000000000000',\n  },\n  {\n    // name: 'Zero Address',\n    address: '0x0000000000000000000000000000000000000001',\n  }\n];\n\nexport function StatusComponent() {\n\n  // const ctx = useContext(WalletContext);\n  // console.log(ctx);\n  return (\n    <>\n      Status: hmmm\n    </>\n  );\n}\n\n","import { Menu } from 'semantic-ui-react';\nimport { AccountSelector } from './account';\n\nimport { NetworkSelector } from './network';\nimport { StatusComponent } from './status';\n\nexport function Nav() {\n  // const [activeItem, setActiveItem] = useState('')\n\n  return (\n    <Menu>\n      <Menu.Item>\n        <StatusComponent/>\n      </Menu.Item>\n      <Menu.Menu position='right'>\n        <Menu.Item>\n          <NetworkSelector/>\n        </Menu.Item>\n       <Menu.Item>\n         <AccountSelector/>\n       </Menu.Item>\n        </Menu.Menu>\n    </Menu>\n  );\n}\n\n","export enum ROUTE {\n  ADD_CONTRACT = '/add-contract',\n  USE_CONTRACT = '/use-contract',\n}\n","import { IAbi } from '../../../types';\n\nexport const ERC20_ABI = [\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"value\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"value\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"recipient\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"sender\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"recipient\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n] as IAbi;\n","import { IAbi } from '../../../types';\nimport { ERC20_ABI } from './IERC20.abi';\nimport { ERC721_ABI } from './IERC721.abi';\n\nexport enum STANDARD {\n  ERC20 = 'ERC20',\n  ERC721 = 'ERC721',\n}\n\nexport const ABI: Record<STANDARD, IAbi> = {\n  [STANDARD.ERC20]: ERC20_ABI,\n  [STANDARD.ERC721]: ERC721_ABI,\n}\n","import { IAbi } from '../../../types';\n\nexport const ERC721_ABI = [\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"approved\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"operator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"bool\",\n        \"name\": \"approved\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"name\": \"ApprovalForAll\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"bytes4\",\n        \"name\": \"interfaceId\",\n        \"type\": \"bytes4\"\n      }\n    ],\n    \"name\": \"supportsInterface\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"balance\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ownerOf\",\n    \"outputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"getApproved\",\n    \"outputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"operator\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"operator\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"_approved\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"name\": \"setApprovalForAll\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"operator\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"isApprovedForAll\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"safeTransferFrom\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"bytes\",\n        \"name\": \"data\",\n        \"type\": \"bytes\"\n      }\n    ],\n    \"name\": \"safeTransferFrom\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n] as IAbi;\n","import { useState } from 'react';\nimport { Header, Container, Form, Label, Button, Input, Dropdown } from 'semantic-ui-react';\nimport { IAbi } from '../../types';\nimport { ABI, STANDARD } from './abi';\n\nconst options = Object.values(STANDARD).map((item) => ({\n  key: item,\n  value: item,\n  text: item,\n}))\n\ninterface IProps {\n  onChange: (abi: IAbi | undefined) => void;\n}\n\nexport const StandardSelector: React.FC<IProps> = ({ onChange: emitChange }) => {\n\n  const [active, setActiveItem] = useState<STANDARD>()\n  const onChange = (value: STANDARD) => {\n    setActiveItem(value);\n    const abi = ABI[value];\n    emitChange(abi);\n  }\n\n  return (\n    <Dropdown\n      button\n      // clearable\n      className='icon'\n      floating\n      icon=''\n      options={options}\n      value={active}\n      onChange={(_, { value }) => onChange(value as STANDARD)}\n      // text={active ? active : 'Use standard'}\n      text=\"Use standard\"\n    />\n  );\n}\n\n","import { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { Header, Container, Form, Label, Button, Input, Dropdown } from 'semantic-ui-react';\nimport { ROUTE } from '../../constants';\nimport { IAbi } from '../../types';\nimport { SafeJSON } from '../../utils';\nimport { STANDARD } from './abi';\nimport { StandardSelector } from './standard-selector';\n\nconst options = [\n  {\n    key: 'erc20',\n    text: 'ERC20',\n    value: 'erc20',\n  },\n  {\n    key: 'erc721',\n    text: 'ERC721',\n    value: 'erc721',\n  },\n]\n\ninterface IValidationFailedResponse<T> {\n  value: undefined;\n  error: string;\n}\n\ninterface IValidationSuccessResponse<T> {\n  value: T;\n  error: undefined;\n}\n\ntype IValidationResponse<T> = IValidationFailedResponse<T> | IValidationSuccessResponse<T>;\n\nfunction validateAddress(value: string): IValidationResponse<string> {\n  if (value.length !== 42) {\n    return {\n      value: undefined,\n      error: 'Length should be 42',\n    };\n  }\n  // TODO: validate\n  return {\n    value: value.toLowerCase(),\n    error: undefined,\n  };\n}\n\nfunction validateAbi(value: string): IValidationResponse<IAbi> {\n  try {\n    const result = JSON.parse(value);\n    if (!Array.isArray(result)) {\n      throw new Error('Not an array');\n    }\n    // TODO: validate isAbi\n    return {\n      value: result,\n      error: undefined,\n    }; \n  } catch (error) {\n    return {\n      value: undefined,\n      error: error.message,\n    }\n  }\n}\n\nexport function AddContractComponent() {\n  // const [activeItem, setActiveItem] = useState('')\n\n  const [addressValue, setAddress] = useState('');\n  const [abiValue, setAbi] = useState('');\n  const [addressError, setAddressError] = useState<string>();\n  const [abiError, setAbiError] = useState<string>();\n\n  const onStandard = (abi?: IAbi) => {\n    if (!abi) {\n      setAbi('');\n      return;\n    }\n    const str = JSON.stringify(abi, null, 2)\n    setAbi(str);\n  }\n\n  const onAddressChange = (value: string) => {\n    setAddress(value);\n  }\n\n  const onAbiChange = (value: string) => {\n    setAbi(value);\n  }\n\n  const history = useHistory();\n\n  const onSubmit = (...args: any[]) => {\n    console.log(...args);\n    \n    const abi = validateAbi(abiValue);\n    setAbiError(abi.error);\n\n    const address = validateAddress(addressValue);\n    setAddressError(address.error);\n\n    if (abi.error === undefined && address.error === undefined) {\n      const params = new URLSearchParams();\n      params.set('address', address.value);\n      params.set('abi', SafeJSON.stringify(abi.value));\n      history.push(`${ROUTE.USE_CONTRACT}?${params.toString()}`);\n    }\n  }\n\n  return (\n    <Container>\n      <Header>Add new contract</Header>\n      <Form onSubmit={onSubmit} >\n        <Form.Input\n          // fluid\n          label=\"Contract Address\"\n          onChange={(_, { value }) => onAddressChange(value)}\n          error={addressError && {\n            content: addressError,\n          }}\n        />\n        <Form.Field\n        // fluid\n        >\n          <label>ABI</label>\n          <Button.Group>\n            <StandardSelector onChange={onStandard} />\n            <Button.Or />\n            <Button>Search on Etherscan.io</Button>\n          </Button.Group>\n          <Form.TextArea\n            value={abiValue}\n            onChange={(_, { value }) => onAbiChange(value?.toString() ?? '')}\n            error={abiError && {\n              content: abiError,\n            }}\n          />\n          <Form.Button content=\"Add\" />\n        </Form.Field>\n      </Form>\n    </Container>\n  );\n}\n\n","import React from 'react';\nimport { Input, Item, Label } from 'semantic-ui-react';\nimport { IAbiInput, SOL_TYPE } from '../../../../types';\n\ninterface IProps {\n  abi: IAbiInput;\n  setValue(value: string): void;\n  value: string;\n}\n\ninterface IState {\n  error: string | undefined;\n}\n\nexport interface SolidityInput extends React.ComponentClass<IProps> {\n}\nexport abstract class AbstractInput extends React.Component<IProps> {\n  abstract type: SOL_TYPE;\n\n  state: IState = {\n    error: undefined,\n  }\n\n  constructor(props: IProps) {\n    super(props);\n  }\n\n  // validate = uuseValidator(this.type);\n  abstract validate(value: string): string | undefined;\n  // validate(value: string): string | undefined {\n  //   if (!isHex(value)) {\n  //     return 'Not hex';\n  //   }\n  //   return \n  // }\n\n  private validateWrap(value: string) {\n    const error = this.validate(value);\n    if (error || this.state.error !== undefined) {\n      this.setState({ ...this.state, error });\n    } \n  }\n\n  onChange(value: string) {\n    this.props.setValue(value);\n    this.validateWrap(value);\n  }\n\n  render() {\n    const { abi, value } = this.props;\n    const { error } = this.state;\n\n    return (\n        <Item>\n          <Item.Content>\n            <Item.Header >{abi.name}</Item.Header>\n            <Item.Meta>\n              {abi.type}\n            </Item.Meta>\n            <Item.Description>\n              <Input\n                fluid\n                value={value ?? ''}\n                onChange={(_, { value }) => this.onChange(value)}\n                error={error !== undefined}\n                placeholder={this.type}\n              />\n            </Item.Description>\n            <Item.Extra>\n              {error && (\n                <Label color=\"red\" basic pointing=\"above\" >{error}</Label>\n              )}\n            </Item.Extra>\n          </Item.Content>\n        </Item>\n    )\n  }\n\n}\n","import { SOL_TYPE } from '../../../../types';\nimport { uuseValidator } from '../../../../utils/validators';\nimport { AbstractInput } from './abstract.input';\n\nexport class AddressInput extends AbstractInput {\n  type = SOL_TYPE.ADDRESS;\n  validate = uuseValidator(this.type);\n}\n","\nimport { SOL_TYPE } from '../../../../types';\nimport { uuseValidator } from '../../../../utils/validators';\nimport { AbstractInput } from './abstract.input';\n\nexport class HexInput extends AbstractInput {\n  type = SOL_TYPE.HEX;\n  validate = uuseValidator(this.type);\n}\n","import { SOL_TYPE } from '../../../types';\nimport { SolidityInput } from './item/abstract.input';\nimport { AddressInput } from './item/address.input';\nimport { HexInput } from './item/hex.input';\n\nconst INPUT: Record<SOL_TYPE, SolidityInput> = {\n  [SOL_TYPE.HEX]: HexInput,\n  [SOL_TYPE.ADDRESS]: AddressInput,\n}\n\nexport function uuseSolidityInput(type: string) {\n  return INPUT[type as SOL_TYPE] ?? INPUT[SOL_TYPE.HEX];\n}\n","import { useState } from 'react';\nimport { Item, Header, Input, Divider, Form, Label, List } from 'semantic-ui-react';\nimport { IAbiInput } from '../../types';\nimport { uuseSolidityInput } from './inputs';\nimport { IAbiValues } from './use-function';\n\n\ninterface IFnInputsProps {\n  inputs: IAbiInput[] | undefined;\n  values: IAbiValues;\n  setValues: (value: IAbiValues) => void;\n}\n\nexport const FnInputs: React.FC<IFnInputsProps> = ({ values, setValues, ...props }) => {\n  \n  if (!props.inputs || !props.inputs.length) {\n    return (\n      <>\n        No Inputs\n      </>\n    );\n  }\n\n  const setValue = (key: keyof IAbiValues, value: IAbiValues[keyof IAbiValues]) => {\n    setValues({ ...values, [key]: value });\n  }\n\n  return (\n    <Item.Group divided>\n      {props.inputs.map((input, index) => {\n        const Elem = uuseSolidityInput(input.type);\n        return (\n          <Elem\n            key={`${input.name}_${input.type}_${index}`}\n            abi={input}\n            value={values[index] ?? ''}\n            setValue={(value) => setValue(index, value)}\n          />\n        );\n\n      })}\n    </Item.Group>\n  );\n}\n","import { Header, Modal, Button, Icon, Divider, Segment, Label, Message } from 'semantic-ui-react';\nimport { useState } from 'react';\nimport { ActionId, IAbiItem } from '../../types'\nimport { FnInputs } from './fn-inputs';\nimport { uuseValidator } from '../../utils/validators';\nimport { useSelector } from 'react-redux';\nimport { useAppDispatch } from '../../redux/hooks';\nimport { chain } from '../../redux';\n\ninterface IProps {\n  address: string;\n  abi: IAbiItem;\n  trigger: React.ReactElement;\n  setActionId: (id: ActionId) => void;\n}\n\nexport type IValue = string;\nexport interface IAbiValues extends Record<string, IValue> { }\n\nfunction concatValues(abi: IAbiItem, valuesMap: IAbiValues): IValue[] {\n  if (!abi.inputs) {\n    return [];\n  }\n\n  const values = abi.inputs.map((_, index) => {\n    const value = valuesMap[index];\n    return value;\n  });\n\n  return values\n}\n\nexport const UseFunction: React.FC<IProps> = (props) => {\n  const chainId = useSelector(chain.select.chainId);\n  const dispatch = useAppDispatch();\n\n  const [isOpen, setOpen] = useState(false);\n  const [values, setValues] = useState<IAbiValues>({});\n  const [error, setError] = useState<string>();\n\n  const abiCoder = chain.utils.uuseAbiCoder(chainId);\n\n  const makeCall = () => {\n    console.log('CALL', values);\n    const parameters = concatValues(props.abi, values);\n    if (!chainId) {\n      throw new Error('Chain not selected ' + chainId);\n    }\n    try {\n      const data = abiCoder.encodeFunctionCall(props.abi, parameters);\n      console.log('ENCODED', data);\n      const call = {\n        data: data,\n        from: '0x87dc5c50828866154e60a044cc21cddc3a378a7b',\n        to: props.address,\n      };\n      const id = chain.async.call(dispatch, call);\n      props.setActionId(id);\n      setOpen(false);\n    } catch (error) {\n      setError(error);\n    }\n\n    // dispatch(mmmakeCall({\n    //   data: data,\n    //   from: '0x87dc5c50828866154e60a044cc21cddc3a378a7b',\n    //   to: props.address,\n    // }))\n  }\n\n  return (\n    <Modal\n      onOpen={() => setOpen(true)}\n      onClose={() => setOpen(false)}\n      open={isOpen}\n      trigger={props.trigger}\n      dimmer={'blurring'}\n      closeOnEscape={false}\n      closeOnDimmerClick={false}\n    >\n      <Header>\n        Use function\n      </Header>\n      <Modal.Content>\n        <FnInputs inputs={props.abi.inputs} values={values} setValues={setValues} />\n        {error && (\n          <Message negative>\n            <Message.Header>Encoding error</Message.Header>\n            <p>{error.toString()}</p>\n          </Message>\n        )}\n      </Modal.Content>\n      <Modal.Actions >\n        <Button color='green' inverted onClick={makeCall}>\n          <Icon name='phone' /> Call\n        </Button>\n        <Button basic onClick={() => setOpen(false)}>\n          <Icon name='cancel' /> Cancel\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  )\n\n}\n","import { useEffect, useMemo, useState } from 'react';\nimport { Header, Container, Form, Label, Button, Input, Dropdown, Segment } from 'semantic-ui-react';\n\nimport { ContractComponent } from './contract-component';\nimport { Location } from 'history';\nimport {} from 'query-string';\nimport { checkIs, SafeJSON } from '../../utils';\ninterface IProps {\n  location: Location;\n  // abi: string;\n}\n\nenum ERROR {\n  ADDRESS_NOT_FOUND = 'ADDRESS_NOT_FOUND',\n  INVALID_ADDRESS = 'INVALID_ADDRESS',\n  ABI_NOT_FOUND = 'ABI_NOT_FOUND',\n  NOT_A_JSON = 'NOT_A_JSON',\n  INVALID_ABI = 'INVALID_ABI',\n}\n\nclass ParseError extends Error {\n\n}\n\nfunction parseLocation(location: Location) {\n  const params = new URLSearchParams(location.search);\n  \n  if (!params.has('address')) {\n    throw new ParseError(ERROR.ADDRESS_NOT_FOUND);\n  }\n  const address = params.get('address')!;\n  if (!checkIs.address(address)) {\n    throw new ParseError(ERROR.INVALID_ADDRESS);\n  }\n\n  if (!params.has('abi')) {\n    throw new ParseError(ERROR.ABI_NOT_FOUND);\n  }\n  const abiRaw = params.get('abi')!;\n  const abiParseResult = SafeJSON.parse(abiRaw);\n  if (abiParseResult.error) {\n    throw new ParseError(ERROR.NOT_A_JSON);\n  }\n  const abi = abiParseResult.value;\n  if (!checkIs.abi(abi)) {\n    throw new ParseError(ERROR.INVALID_ABI);\n  }\n\n  return { abi, address };\n}\n\n\n\nexport const UseContractComponent: React.FC<IProps> = ({ location }) => {\n\n  const [error, setError] = useState<string>();\n\n  const value = useMemo(() => {\n    try {\n      return parseLocation(location);\n    } catch (err) {\n      if (err instanceof ParseError) {\n        return { error: err.message }\n      } else {\n        return { error: 'unknown error'}\n      }\n      // return { address: undefined, abi: undefined };\n    }\n  }, [location]);\n\n  console.log('FFFFFFFFFFFFFFFFFFF')\n  if ('error' in value) {\n    return (\n      <Container>\n        <Header color='red'>Error has occured</Header>\n        <Segment>\n          {value.error}\n        </Segment>\n      </Container>\n    )\n  }\n  return (\n    <ContractComponent address={value.address} abi={value.abi} />\n  )\n}\n\n","import { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Container, Label, Card, Button, Segment, Input, Divider, Icon } from 'semantic-ui-react';\nimport { chain } from '../../redux';\nimport { IAbiInput, IAbiItem, IAbi, ActionId } from '../../types';\nimport { UseFunction } from './use-function';\ninterface IProps {\n  abi: IAbiItem;\n  address: string;\n}\n\nexport const AbiFunction: React.FC<IProps> = ({ abi, address }) => {\n  const chainId = useSelector(chain.select.chainId);\n\n  const [actionId, setActionId] = useState<ActionId>();\n\n  const abiCoder = chain.utils.uuseAbiCoder(chainId);\n  const signature = abiCoder.encodeFunctionSignature(abi);\n  const actionSelector = chain.select.factory.action(chainId, address, signature, actionId ?? '');\n  const action = useSelector(actionSelector);\n\n  const params = abi.inputs!\n    .map((input) => `${input.type} ${input.name}`)\n    .join(', ');\n\n  const description = abi.stateMutability ? ` ${abi.stateMutability} ` : '';\n\n  const returns = abi.outputs\n    ? ' returns ' + abi.outputs\n      .map((item) => `${item.type} ${item.name}`)\n      .join(', ')\n    : '';\n\n  return (\n    <Card fluid>\n      <Card.Content>\n        <Card.Header>{abi.name}</Card.Header>\n        <Card.Meta>\n          {abi.name}({params}){description ? <strong>{description}</strong> : ''}{returns}\n        </Card.Meta>\n        <Card.Description>\n          {action && (\n            <>\n            <div>Id: {action.id}</div>\n            <div>State: {action.state}</div>\n            {action.result && (\n              <div>Result: {action.result}</div>\n            )}\n            </>\n          )}\n        </Card.Description>\n      </Card.Content>\n      <Card.Content extra >\n        <UseFunction\n          abi={abi}\n          address={address}\n          setActionId={setActionId}\n          trigger={(\n            <Button basic>\n              Call\n            </Button>\n          )}\n        />\n        {abi.stateMutability !== 'view' && (\n          // <UseFunction\n          //   abi={abi}\n          //   address={address}\n          //   trigger={(\n          //     <Button basic color='red'>\n          //       Send Transaction\n          //     </Button>\n          //   )}\n          // />\n          <Button basic color='red'>\n          Send Transaction\n        </Button>\n        )}\n      </Card.Content>\n    </Card>\n  );\n}\n\n/*\n            <Button basic color='red'>\n              Send Transaction\n            </Button>\n            */\n","import { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { Container, Label, Dropdown, Button, Segment, Input, Divider, Icon, Card, Header } from 'semantic-ui-react';\nimport { IAbiInput, IAbiItem, IAbi } from '../../types';\nimport { AbiFunction } from './abi-function';\n\ninterface IProps {\n  address: string;\n  abi: IAbi;\n}\n\nexport const ContractComponent: React.FC<IProps> = ({ address, abi }) => {\n\n  return (\n    <Container>\n      <Header>Address: {address}</Header>\n      <Card.Group>\n      {abi\n        .filter(({type}) => type === 'function')\n        .map((item) => (\n          <AbiFunction key={`${item.type}_${item.name}`} abi={item} address={address} />\n      ))}\n      </Card.Group>\n    </Container>\n  );\n}\n\n","import { Router, Switch, Route, Redirect } from 'react-router-dom';\nimport { Loader } from 'semantic-ui-react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport 'semantic-ui-css/semantic.min.css'\n\nimport { ConnectComponent } from '../../components/connect';\nimport { Nav } from '../../components/nav';\nimport { AddContractComponent } from '../../components/add-contract';\nimport { wallet } from '../../redux/reducers/wallet';\nimport { useEffect } from 'react';\nimport { UseContractComponent } from '../../components/use-contract';\n\nimport { createBrowserHistory } from 'history';\nimport { ROUTE } from '../../constants';\n\nconst history = createBrowserHistory();\n\nexport const OnlyConnected: React.FC = ({ children }) => {\n  const all = useSelector(wallet.select.all);\n  const dispatch = useDispatch()\n  useEffect(() => {\n    console.log('DISPATCH')\n    dispatch(wallet.async.autoConnect());\n  }, []);\n  console.log('wtf', {\n    loading: all.loading,\n    connector: all.connector,\n  })\n  if (all.loading) {\n    return (\n      <Loader />\n    )\n  }\n  if (!all.connector) {\n    return (\n      <ConnectComponent />\n    );\n  }\n  return (\n    <>\n      {children}\n    </>\n  );\n}\n\nfunction App() {\n  return (\n    <Router history={history}>\n      <OnlyConnected>\n        <Nav />\n        <Switch>\n          <Route path={ROUTE.ADD_CONTRACT} component={AddContractComponent} />\n          <Route path={ROUTE.USE_CONTRACT} component={UseContractComponent} />\n          <Route path=\"/\">\n            <h1>Home</h1>\n          </Route>\n          <Redirect to='/' />\n        </Switch>\n      </OnlyConnected>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\nimport App from './pages/app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}